/* Removes accordion header outline */
* {
  outline: 0 !important;
}

a {
  color: inherit;
}

p {
  margin: 0px;
  padding: 0px;
}

/* Defines cursor view for AngularJS controls */
[ng-click] {
  cursor:pointer;
}

/* Forms panel styles */
#forms-panel {
  width:50%;
}

/* Status panel styles */
#status-panel {
  background-color:#f8f8f8;
  float:right;
  width:50%;
  padding-left: 10px;
}

/* Defines "sticky" behavior of the status panel */
.ng-sticky-behaviour{
  margin-top: 0px;
  overflow-y:auto;
  position:fixed;
  right:0;
  top:0;
  width:50%;
}

/* List view styles */

#list-view tr:hover {
  background-color: #efefef; 
}

/* Header styles */
#header {
  margin-top: 10px;
}

/* Main container styles */
#main-content {
  margin-top: 10px;
}


/* Some border-box*/
* {
    box-sizing: border-box;
}
/*This just stops me getting horizontal scrolling if anything overflows the width*/
body {
    overflow-x: hidden;
}

/*This is our main wrapping element, it's made 100vh high to ensure it is always the correct size and then moved into place and padded with negative margin and padding*/
.Container {
    display: flex;
    overflow: hidden;
    height: 100vh;
    position: relative;
    width: 100%;
    backface-visibility: hidden;
    will-change: overflow;
}
/*All the scrollable sections should overflow and be whatever height they need to be. As they are flex-items (due to being inside a flex container) they could be made to stretch full height at all times if needed.
WebKit inertia scrolling is being added here for any present/future devices that are able to make use of it.
*/
.Left,
.Right {
    overflow: auto;
    height: auto;
    padding: .5rem;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: none;
}
/*Entirely optional â€“ just wanted to remove the scrollbar on WebKit browsers as I find them ugly*/
.Left::-webkit-scrollbar,
.Right::-webkit-scrollbar {
    display: none;
}
/*  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/
.Left {
    width: 12.5rem;
}
.Right {
    width: 12.5rem;
}